提供对action的服务类  ，客户信息/账期信息/预付费信息/联系人信息/物料关系信息
这些信息的状态为：
0----正式数据
1---临时数据（没有提交审批）
2---待审批数据
3---审批不通过
4---废弃数据
5--系统锁定


操作说明，
通过spring的配置，以以下方式获取：
CustomerInfoMgr customerInfoMgr = (CustomerInfoMgr)BeanLocator.getInstance().getBean("customerInfoMgr");

提供方法如下：
/**
	 * 保存客户信息的临时数据,数据状态为临时状态,
	 * @param custInfo
	 * @return  0---成功   1---失败
	 * @throws Exception
	 */
	public int saveTempCustomerInfo(CustomerInfo custInfo) throws Exception
	
	
/**
	 * 提交数据审批,数据的状态为临时状态,或者为领导审批拒绝的状态,才可以提交审批
	 * 数据状态修改的同时，需要发待办通知
	 * @param custInfo
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int commitCustomerInfo(CustomerInfo custInfo,String staffId,String staffName) throws Exception

/**
	 * 审批同意客户资料
	 * @param custInfo
	 * @param auditName  审批人
	 * @param auditDesc  审批意见
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int auditAgreeCustomerInfo(CustomerInfo custInfo , String auditId, String auditName,String auditDesc) throws Exception
	
/**
	 * 审批不同意客户资料
	 * @param custInfo
	 * @param auditName  审批人
	 * @param auditDesc  审批意见
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int auditDisAgreeCustomerInfo(CustomerInfo custInfo ,String auditId, String auditName,String auditDesc) throws Exception
	
/**
	 * 修改客户信息，修改前的状态可能不同，需要区别对待
	 * 修改前状态为1 ，对临时数据做修改
	 * 修改前状态为0 ，对正式数据做修改，直接提交领导审批
	 * 修改前状态为3 ，对审批不通过的数据修改，直接提交领导审批
		//其他状态不存在修改操作
	 * @param custInfo
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int updateCustomerInfo(CustomerInfo custInfo, String staffId,String staffName) throws Exception

/**
	 * 锁定客户资料，财务执行，只能对正式数据做锁定操作
	 * @param custInfo
	 * @param staffId  操作人ID
	 * @param staffName 操作人姓名
	 * @param lockDesc  锁定说明
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int lockCustomerInfo(CustomerInfo custInfo , String staffId,String staffName,String lockDesc) throws Exception

/**
	 * 解锁客户资料，财务执行，只能对锁定数据做解锁操作
	 * @param custInfo
	 * @param staffId  操作人ID
	 * @param staffName 操作人姓名
	 * @param lockDesc  解锁说明
	 * @return 0---成功   1--无此状态  2---状态不正确
	 * @throws Exception
	 */
	public int unlockCustomerInfo(CustomerInfo custInfo , String staffId,String staffName,String lockDesc) throws Exception

/**
	 * 废除客户数据，只有在审批不通过的状态，才能有废除操作
	 * @param custInfo
	 * @param staffId   操作人ID
	 * @param staffName  操作人
	 * @param delDesc   废除原因
	 * @return
	 * @throws Exception
	 */
	public int deleteCustomerInfo(CustomerInfo custInfo,String staffId,String staffName,String delDesc) throws Exception
	
/**
     * 
     * @param custInfo 查询的字段为：baseSeqId 或 commCode,State组合 
     * @param isAll   是否包含所有信息，联系人信息，银行信息，账期信息
     * @return CustomerInfo
     * @throws Exception
     */
	public CustomerInfo getCustomerInfo(CustomerInfo custInfo,boolean isAll)throws Exception

/**
	 * 获取满足条件的客户数量
	 * @param cInfo
	 * @return
	 * @throws Exception
	 */
	public Integer getCustomerInfoCount(CustomerInfo cInfo)throws Exception
	
/**
	 * 获取满足客户信息，支持模糊查询及分页查询
	 * @param cInfo
	 * @return
	 * @throws Exception
	 */
	public List<CustomerInfo> getCustomerInfoList(CustomerInfo cInfo)throws Exception
	