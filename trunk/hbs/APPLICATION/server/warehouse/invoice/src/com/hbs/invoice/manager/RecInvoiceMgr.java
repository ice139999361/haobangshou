/**
 * system ：hbs
 * desc:    
 * version: 1.0
 * author : yangzj
 */
package com.hbs.invoice.manager;

import java.util.List;

import org.apache.log4j.Logger;

import com.hbs.common.springhelper.BeanLocator;
import com.hbs.domain.common.dao.baseinfo.InvoiceInfoDao;
import com.hbs.domain.common.pojo.baseinfo.InvoiceInfo;
import com.hbs.invoice.constants.InvoiceConstants;
import com.hbs.warehouse.common.utils.WareHouseLogUtils;

public class RecInvoiceMgr {
private static final Logger logger = Logger.getLogger(RecInvoiceMgr.class);
	
	/**
	 * 保存供应商发票记录，保存的依据是供应商的送货单
	 * @param invoiceInfo
	 * @return >0 保存成功
	 * @throws Exception
	 */
	public int saveRecInvoice(InvoiceInfo invoiceInfo) throws Exception{
		int ret =0;
		logger.debug("保存收货财务发票记录信息！输入的参数为：" + invoiceInfo.toString());
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		ret = dao.insertInvoiceInfo(invoiceInfo);
		//操作日志
		WareHouseLogUtils.operLog(invoiceInfo.getStaffId(), invoiceInfo.getStaffName(), "新增", "供应商发票", invoiceInfo.getLogKey(), null, null);
		return ret;
	}
	/**
	 * 修改供应商发票记录
	 * @param invoiceInfo
	 * @return 0  成功
	 * @throws Exception
	 */
	public int updateRecInvoice(InvoiceInfo invoiceInfo) throws Exception{
		int ret =0;
		logger.debug("修改收货财务发票记录信息！输入的参数为：" + invoiceInfo.toString());
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		dao.updateInvoiceInfo(invoiceInfo);
		//操作日志
		WareHouseLogUtils.operLog(invoiceInfo.getStaffId(), invoiceInfo.getStaffName(), "修改", "供应商发票", invoiceInfo.getLogKey(), null, null);
		return ret;
	}
	/**
	 * 删除供应商发票记录，先查找，不存在，抛出异常
	 * @param seqId
	 * @return
	 * @throws Exception
	 */
	public int deleteRecInvoice(String seqId) throws Exception{
		int ret =0;
		logger.debug("删除收货财务发票记录信息！输入的参数为：" + seqId);
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		InvoiceInfo existInfo = dao.findInvoiceInfo(seqId);
		if(existInfo != null){
			dao.deleteInvoiceInfo(seqId);
			//操作日志
			WareHouseLogUtils.operLog(existInfo.getStaffId(), existInfo.getStaffName(), "删除", "供应商发票", existInfo.getLogKey(), existInfo.toString(), null);
		}else{
			throw new Exception("需要删除的供应商发票信息不存在！输入的参数为：" + seqId);
		}
		return ret;
	}
	
	/**
	 * 根据seqid查找单条供应商发票记录
	 * @param seqId
	 * @return
	 * @throws Exception
	 */
	public InvoiceInfo getRecInvoice(String seqId) throws Exception{
		InvoiceInfo ret = null;
		logger.debug("查找单条收货财务发票记录信息！输入的参数为：" + seqId);
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		ret = dao.findInvoiceInfo(seqId);		
		return ret;
	}
	/**
	 * 根据输入的条件，查询供应商发票列表记录
	 * @param invoiceInfo
	 * @return
	 * @throws Exception
	 */
	public List<InvoiceInfo> getRecInvoiceList(InvoiceInfo invoiceInfo) throws Exception{
		List<InvoiceInfo> ret = null;
		logger.debug("查找条收货财务发票记录信息！输入的参数为：" + invoiceInfo.toString());
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		ret = dao.listInvoiceInfo(invoiceInfo);
		return ret;
	}
	/**
	 * 根据输入的条件，查询供应商发票列表记录数
	 * @param invoiceInfo
	 * @return
	 * @throws Exception
	 */
	public int getRecInvoiceListCount(InvoiceInfo invoiceInfo) throws Exception{
		int ret =0;
		logger.debug("查找条收货财务发票记录信息记录数！输入的参数为：" + invoiceInfo.toString());
		InvoiceInfoDao dao = (InvoiceInfoDao)BeanLocator.getInstance().getBean(InvoiceConstants.VENDOR_REC_INVOICE_DAO);
		ret = dao.listInvoiceInfoCount(invoiceInfo);
		return ret;
	}
}
