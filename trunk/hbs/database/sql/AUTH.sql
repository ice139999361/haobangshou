/*
CREATED		2009-12-7
MODIFIED		2010-3-2
PROJECT		
MODEL		
COMPANY		
AUTHOR		
VERSION		
DATABASE		MYSQL 5 
*/



DROP TABLE IF EXISTS `STAFF`;
CREATE TABLE STAFF (
	STAFF_ID INT NOT NULL AUTO_INCREMENT COMMENT '用户ID(PK,自动生成)',
	STAFF_NAME VARCHAR(32) NOT NULL COMMENT '用户名(UNIQUE)',
	IDENTITY_NUMBER VARCHAR(32) COMMENT '身份证号码',
	GENDER VARCHAR(4) COMMENT '性别',
	BIRTH_DATE VARCHAR(16) COMMENT '出生日期',
	PHONE VARCHAR(32) COMMENT '电话',
	MOBILE VARCHAR(12) COMMENT '手机',
	EMAIL VARCHAR(128) COMMENT '邮箱',
	DUTY VARCHAR(32) COMMENT '职务',
	MEMO VARCHAR(256) COMMENT '注释',
	UNIQUE (STAFF_NAME),
 PRIMARY KEY (STAFF_ID)
) ENGINE = innodb
COMMENT = '用户基本信息表';

DROP TABLE IF EXISTS `ACCOUNT`;
CREATE TABLE ACCOUNT (
	STAFF_ID INT NOT NULL,
	ACCOUNT VARCHAR(16) NOT NULL COMMENT '用户账号(UNIQUE)',
	PASSWORD VARCHAR(32) NOT NULL COMMENT '密码',
	LOGIN_TIME DATETIME COMMENT '登入时间',
	LOGOUT_TIME DATETIME COMMENT '登出时间',
	ENABLED TINYINT NOT NULL DEFAULT 1 COMMENT '是否有效（ 有效非0； 无效0）',
	UNIQUE (ACCOUNT),
 PRIMARY KEY (STAFF_ID),
 CONSTRAINT RLT_FK_STAFF_ID FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID) 
) ENGINE = innodb
COMMENT = '用户账号表';

DROP TABLE IF EXISTS `ROLE`;
CREATE TABLE ROLE (
	ROLE_ID INT NOT NULL AUTO_INCREMENT COMMENT '角色ID(PK,自动生成)',
	ROLE_NAME VARCHAR(64) NOT NULL COMMENT '角色名(UNIQUE)',
	MEMO VARCHAR(256) COMMENT '注释',
	UNIQUE (ROLE_NAME),
 PRIMARY KEY (ROLE_ID)
) ENGINE = innodb
COMMENT = '角色表';

DROP TABLE IF EXISTS `USER_ROLE`;
CREATE TABLE USER_ROLE (
	STAFF_ID INT NOT NULL COMMENT '用户ID(FK->STAFF.STAFF_ID)',
	ROLE_ID INT NOT NULL COMMENT '角色ID(FK->ROLE.ROLE_ID)',
	MEMO VARCHAR(256) COMMENT '注释',
 CONSTRAINT RLT_ROLE_STAFF_ID FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID) ,
 CONSTRAINT RLT_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID) 
) ENGINE = innodb
COMMENT = '用户角色表';

DROP TABLE IF EXISTS `ACTION`;
CREATE TABLE ACTION (
	ACTIONS_ID INT NOT NULL AUTO_INCREMENT COMMENT '所有操作ID(PK,自动生成)',
	ACTION_ID VARCHAR(32) NOT NULL COMMENT '操作ID',
	ACTION_NAME VARCHAR(128) NOT NULL COMMENT '操作名',
	BUTTON_ID VARCHAR(32) NOT NULL COMMENT '对应的页面按钮的ID名',
	DESCRIPTION VARCHAR(32) NOT NULL,
	UNIQUE KEY `ACTIONS_ID` (`ACTIONS_ID`,`ACTION_ID`(1))
) ENGINE = innodb
COMMENT = '操作表';

DROP TABLE IF EXISTS `resource`;
CREATE TABLE `resource` (
  `RESOURCE_ID` int(11) NOT NULL auto_increment COMMENT '资源ID(PK,自动生成)',
  `ACTIONS_ID` int(11) NOT NULL COMMENT '该资源页面的所有操作ID（FK->ACTION.ACTIONS_ID)',
  `RESOURCE_NAME` varchar(64) NOT NULL COMMENT '资源名',
  `DESCRIPTION` varchar(64) default NULL COMMENT '描述',
  `URL_ADDRESS` varchar(256) default NULL COMMENT '对应的url地址',
  `PARENT` int(11) NOT NULL default '0' COMMENT '资源的父子关系，顶级为0',
  `IS_MENU` varchar(255) default NULL,
  PRIMARY KEY  (`RESOURCE_ID`),
  KEY `RLT_FK_ACTIONS_ID` (`ACTIONS_ID`),
  CONSTRAINT `RLT_FK_ACTIONS_ID` FOREIGN KEY (`ACTIONS_ID`) REFERENCES `action` (`ACTIONS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=gbk COMMENT='资源表';

DROP TABLE IF EXISTS `ROLE_RESOURCE`;
CREATE TABLE ROLE_RESOURCE (
	ROLE_ID INT NOT NULL COMMENT '角色ID(FK->ROLE.ROLE_ID)',
	RESOURCE_ID INT NOT NULL COMMENT '资源ID(FK->RESOURCE.ID)',
	OPERATIONS VARCHAR(1024) NOT NULL COMMENT '操作（OPERATION_ID，有多个操作用半角逗号隔开.来自ACTION表）',
 CONSTRAINT RLT_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID) ,
 CONSTRAINT RLT_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES RESOURCE (RESOURCE_ID) 
) ENGINE = innodb
COMMENT = '角色权限对应表';















